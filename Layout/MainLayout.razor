@inherits LayoutComponentBase
@using BrokenNes.Layout
@using BrokenNes
@using BrokenNes.Shared
@using Microsoft.AspNetCore.Components.Web
<div class="app-shell">
    <!-- Persistent animated background across pages (except NES) -->
    @if (!IsOnNes)
    {
        <div id="pixelBgHost" class="pixel-bg-host" aria-hidden="true"></div>
        <div class="pixel-vignette" aria-hidden="true"></div>
    }
    <header class="app-bar">
        <div class="brand" @onclick="NavigateHome" @onkeydown="OnBrandKey" role="button" tabindex="0" aria-label="Return to home">BrokenNes</div>
    </header>
    <div class="status-dock">
        <StatusBar />
    </div>
    <main class="app-main">
        @Body
    </main>
</div>

<!-- Persistent title music element (moved from Home.razor so early navigation during fade-in doesn't kill audio) -->
<audio id="titleMusic" src="music/TitleScreen.mp3" preload="auto" loop style="display:none"></audio>

@inject NavigationManager Nav

@code {
    private bool IsOnNes => SafeIsOnNes();

    private void NavigateHome()
    {
        // Use relative navigation (no leading slash) so subfolder hosting works (avoids resetting to domain root)
        Nav.NavigateTo("./?skipHW=1", forceLoad: false);
    }

    private void OnBrandKey(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" || e.Key == " ")
        {
            NavigateHome();
        }
    }

    protected override void OnInitialized()
    {
        // Ensure layout re-renders on route change so background hides immediately on NES
        try { Nav.LocationChanged += (_, __) => InvokeAsync(StateHasChanged); } catch { }
    }

    private bool SafeIsOnNes()
    {
        try
        {
            var uri = Nav.Uri ?? string.Empty;
            // Match "/nes" anywhere in the path (handles subfolder hosting)
            return uri.Contains("/nes", StringComparison.OrdinalIgnoreCase);
        }
        catch { return false; }
    }
}
