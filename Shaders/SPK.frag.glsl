// DisplayName: SPK
precision mediump float;
varying vec2 vTex;
uniform sampler2D uTex;
uniform float uTime;
uniform vec2 uTexSize;
uniform float uStrength;
float hash(vec2 p){p=fract(p*vec2(123.34,456.21));p+=dot(p,p+45.32);return fract(p.x*p.y);}float noise(vec2 p){vec2 i=floor(p);vec2 f=fract(p);f=f*f*(3.0-2.0*f);float a=hash(i);float b=hash(i+vec2(1,0));float c=hash(i+vec2(0,1));float d=hash(i+vec2(1,1));return mix(mix(a,b,f.x),mix(c,d,f.x),f.y);}float luma(vec3 c){return dot(c,vec3(0.299,0.587,0.114));}void main(){vec2 uv=vec2(vTex.x,1.0-vTex.y);vec2 texel=1.0/uTexSize;float t=uTime;float inten=clamp(uStrength,0.3,3.0);vec3 base=texture2D(uTex,uv).rgb;vec3 cL=texture2D(uTex,uv-vec2(texel.x,0.0)).rgb;vec3 cR=texture2D(uTex,uv+vec2(texel.x,0.0)).rgb;vec3 cU=texture2D(uTex,uv-vec2(0.0,texel.y)).rgb;vec3 cD=texture2D(uTex,uv+vec2(0.0,texel.y)).rgb;float dx=luma(cR)-luma(cL);float dy=luma(cD)-luma(cU);float edge=clamp(length(vec2(dx,dy))*2.2,0.0,1.0);float lum=luma(base);float burst=smoothstep(0.55,0.9,lum)*(0.5+0.5*edge);vec2 gdir=normalize(vec2(dx,dy)+1e-5);vec2 ortho=vec2(-gdir.y,gdir.x);float specAmp=(0.25+0.75*edge)*(0.4+0.6*inten);vec3 prism;{float shift=1.5*specAmp;vec2 offsR=uv+(gdir*shift+ortho*0.7*specAmp)*texel;vec2 offsG=uv-(ortho*shift*0.6)*texel;vec2 offsB=uv-(gdir*shift-ortho*0.4*specAmp)*texel;prism.r=texture2D(uTex,clamp(offsR,0.0,1.0)).r;prism.g=texture2D(uTex,clamp(offsG,0.0,1.0)).g;prism.b=texture2D(uTex,clamp(offsB,0.0,1.0)).b;}vec3 sparkAccum=vec3(0.0);float wsum=0.0;for(int layer=0;layer<3;layer++){float lf=float(layer);float scale=mix(120.0,480.0,lf/2.0);float speed=mix(0.25,0.9,lf/2.0);vec2 suv=uv*scale+vec2(noise(vec2(lf*13.7,t*0.11))*40.0,t*speed*scale);float jitter=(noise(vec2(uv.y*scale*0.37+lf*9.13,t*0.9))-0.5)*2.0;suv.x+=jitter*0.65;vec2 cell=floor(suv);vec2 f=fract(suv);float rnd=hash(cell+lf*17.31);float spawn=step(0.93-0.4*edge-0.35*lum,rnd);vec2 starP=f-0.5;float d=length(starP);float star=pow(clamp(1.0-d*2.2,0.0,1.0),3.0);float tw=0.5+0.5*sin(t*12.0+rnd*40.0+lf*3.0);float sparkle=spawn*star*tw;vec3 scol=vec3(0.6+0.4*sin(rnd*20.0+lf*0.7+t*3.0),0.6+0.4*sin(rnd*25.0+lf*1.1+t*2.6+2.1),0.6+0.4*sin(rnd*30.0+lf*1.7+t*2.9+4.2));float weight=mix(0.55,1.2,lf/2.0);sparkAccum+=scol*sparkle*weight;wsum+=weight;}sparkAccum/=max(wsum,0.001);float radial=length(uv-0.5);float depthFactor=smoothstep(0.9,0.15,radial);sparkAccum*=(0.6+0.8*depthFactor);float wave=sin(t*5.0+lum*15.0+radial*40.0)*0.5+0.5;float burstEnv=burst*(0.35+0.65*wave);vec3 burstCol=prism*(0.4+0.6*burstEnv);vec3 col=base;col=mix(col,prism,0.35+0.25*edge);col+=sparkAccum*(0.55+0.35*edge)*inten;col+=burstCol*0.35*inten;float shimmer=noise(uv*vec2(280.0,140.0)+vec2(t*1.8,t*2.1));col*=0.85+0.15*shimmer;col=pow(col,vec3(0.95));float lfin=luma(col);col=mix(vec3(lfin),col,0.82+0.12*edge);float baseLum=lum;float effLum=luma(col);float over=max(effLum-baseLum,0.0);float darkenFactor=1.0-0.35*clamp(over*1.5,0.0,1.0);col*=darkenFactor;col=clamp(col,0.0,1.0);vec3 finalCol=mix(col,base,0.420);gl_FragColor=vec4(finalCol,1.0);}
